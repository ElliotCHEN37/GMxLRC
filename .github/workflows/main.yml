name: Build - Test

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        architecture: [x64, x32]
        include:
          - os: windows-latest
            architecture: x64
          - os: windows-latest
            architecture: x32
          - os: macos-latest
            architecture: x64

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: |
          if [[ "${{ matrix.os }}" == 'windows-latest' ]]; then
            if [[ "${{ matrix.architecture }}" == 'x32' ]]; then
              pyinstaller --onefile --name myapp_x32 --distpath dist/windows/x32 --specpath build.spec --win32
            else
              pyinstaller --onefile --name myapp_x64 --distpath dist/windows/x64 --specpath build.spec --win64
            fi
          elif [[ "${{ matrix.os }}" == 'macos-latest' ]]; then
            pyinstaller --onefile --name myapp_mac --distpath dist/macos --specpath build.spec
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: myapp-${{ matrix.os }}-${{ matrix.architecture }}
          path: |
            dist/windows/x32/*
            dist/windows/x64/*
            dist/macos/*
